@using MyGameStore.Extensions
@using MyGameStore.ViewModel
@using MyGameStoreModel.Entities
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

@model GameProductsVM

<div class="container">
	<div class="row justify-content-center">
		<form asp-controller="Home" asp-action="Index" method="get">
			<p>
				жанр:
				<select name="selectedGenreGameProduct"
						asp-for="FilteredGP_VM.SelectedGenreGameProduct"
						value="FilteredGP_VM.SelectedGenreGameProduct"
						asp-items="Model.FilteredGP_VM.Genres">
					<option value="Все">Все жанры</option>
				</select>

				фильтр:
				<select name="sortGameProductState"
						asp-for="SortGPVM.SortTitleGP">
					<option value="">Все</option>
					<option value="TitleAsc">по алфавиту (А до Я)</option>
					<option value="titleDesc">по алфавиту (я до а)</option>
				</select>

				Введите название:
				<input name="selectedTitleGamePoduct"
					   value="@Model.FilteredGP_VM.SelectedTitleGP"
					   type="text" />
				<input type="submit" value="поиск" />
			</p>
		</form>
		@* Название:
		<input type="text" asp-for="NameSearchString"/>
		<input type="submit" value="поиск..." /> *@

		@foreach (var gameProduct in Model.GameProducts)
		{
			<div class="col-sm-6 col-lg-4 d-flex justify-content-center mb-4">

				<div class="card" style="width: 18rem;">
					<a asp-controller="Game" asp-action="Details" asp-route-id="@gameProduct.Id" style="text-decoration: inherit; color: inherit">
						<img src="@gameProduct.TitulUrl" class="card-img-top" alt="@gameProduct.Title">
						<div class="card-body">
							<h5 class="card-title">@gameProduct.Title</h5>
							<p class="card-text">@gameProduct.Description.Truncate(40)...</p>
							<p class="card-text">@gameProduct.Price</p>
							<a asp-controller="Game" asp-action="Details" asp-route-id="@gameProduct.Id" class="btn btn-primary">Купить</a>
						</div>
					</a>
				</div>
			</div>
		}
	</div>
	@{
		const string Disabled = "disabled";
		const string Active = "active";

		string isDisabledPreviousPage = string.Empty;
		if(!Model.GameProducts.HasPreviousPage)
		{
			isDisabledPreviousPage = Disabled;
		}
		string isDisabledNextPage = string.Empty;
		if (!Model.GameProducts.HasNextPage)
		{
			isDisabledNextPage = Disabled;
		}
	}
	<nav class="mt-3">
		<ul class="pagination">
			<li class="page-item @isDisabledPreviousPage">
				<a asp-action="Index"
				   asp-route-page="@(Model.GameProducts.PageIndex - 1)"
				   asp-route-sortGameProductState="@(Model.SortGPVM.SortTitleGP)"
				   asp-route-selectedGenreGameProduct="@(Model.FilteredGP_VM.SelectedGenreGameProduct)"
				   asp-route-selectedTitleGamePoduct="@(Model.FilteredGP_VM.SelectedTitleGP)"
				   class="page-link"
				   tabindex="-1"
				   aria-disabled="@(!Model.GameProducts.HasPreviousPage)">назад:</a>
			</li>
			@for (int indexPage = 1; indexPage <= Model.GameProducts.TotalPages; indexPage++)
			{
				string isActive = string.Empty;
				@if (indexPage == Model.GameProducts.PageIndex)
				{
					isActive = "active";
				}
				<li class="page-item @isActive">
					<a asp-action="Index"
					   asp-route-page="@indexPage"
					   asp-route-sortMovieState="@(Model.SortGPVM.SortTitleGP)"
					   asp-route-selectedMovieGenre="@(Model.FilteredGP_VM.SelectedGenreGameProduct)"
					   asp-route-selectedMovieTitle="@(Model.FilteredGP_VM.SelectedTitleGP)"
					   class="page-link">@indexPage</a>
				</li>
			}
			<li class="page-item @isDisabledNextPage">
				<a asp-action="Index"
				   asp-route-page="@(Model.GameProducts.PageIndex + 1)"
				   asp-route-sortGameProductState="@(Model.SortGPVM.SortTitleGP)"
				   asp-route-selectedGenreGameProduct="@(Model.FilteredGP_VM.SelectedGenreGameProduct)"
				   asp-route-selectedTitleGamePoduct="@(Model.FilteredGP_VM.SelectedTitleGP)"				   
				   class="page-link"
				   aria-disabled="Model.GameProducts.HasNextPage">вперед</a>
			</li>
		</ul>
	</nav>	
</div>


